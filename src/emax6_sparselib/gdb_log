Breakpoint 1 at 0x400e3e: file test_chipA_spmv_multi_real_data_test.c, line 42.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[New Thread 0x7ffff55c3700 (LWP 957170)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7ffff4dc2700 (LWP 957171)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7ffff05c1700 (LWP 957172)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffeddc0700 (LWP 957173)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffeb5bf700 (LWP 957174)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffe8dbe700 (LWP 957175)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffe65bd700 (LWP 957176)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffe3dbc700 (LWP 957177)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffe15bb700 (LWP 957178)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffdedba700 (LWP 957179)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffdc5b9700 (LWP 957180)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffd9db8700 (LWP 957181)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffd75b7700 (LWP 957182)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffd6db6700 (LWP 957183)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffd45b5700 (LWP 957184)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffcfdb4700 (LWP 957185)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffcd5b3700 (LWP 957186)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffcadb2700 (LWP 957187)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffca5b1700 (LWP 957188)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffc5db0700 (LWP 957189)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffc35af700 (LWP 957190)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffc2dae700 (LWP 957191)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[New Thread 0x7fffc05ad700 (LWP 957192)]
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Thread 1 "test_chipA_spmv" hit Breakpoint 1, main (argc=2, argv=0x7fffffffe548) at test_chipA_spmv_multi_real_data_test.c:42
42	Uint *A = NULL;  /*[A_row_size][L];*/
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
 41  {   
!42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
 46  Uint *Base_p = NULL;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x4201e3: file kernel/spmv_sparse_CHIP_div_A.c, line 36.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Thread 1 "test_chipA_spmv" hit Breakpoint 2, spmv_sparse_CHIP_div_A (C=0x7fffb25a51b0, A=0x7fffaa97b010, B=0x7fffb25a1310, A_sparse=0x72ba00, params=0x7fffffffe230) at kernel/spmv_sparse_CHIP_div_A.c:36
36	    Uint C_debug_val = 0,A_debug_val = 0,B_debug_val = 0;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 31      // Ull A_row_size = M, A_col_size = K, B_row_size = K, B_col_size = N;
 32      // Uint* paddings = A_sparse->paddings;
 33  
 34      Uint top,blk,b_col_B_col_blk;
 35      Ull c_index,c_index1,c_index2,c_index3;
!36      Uint C_debug_val = 0,A_debug_val = 0,B_debug_val = 0;
 37  
 38      #define NCHIP 1
 39      size_t A_row_size = params->A_row_size_param;   // 縛りなし
 40      size_t A_col_size = params->A_col_size_param;   // 縛りなし　H_padのおかげ
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Thread 1 "test_chipA_spmv" hit Breakpoint 2, spmv_sparse_CHIP_div_A (C=0x7fffac8e5b00, A=0x7fffaa97b010, B=0x7fffac8e3b50, A_sparse=0x72ba00, params=0x7fffffffe230) at kernel/spmv_sparse_CHIP_div_A.c:36
36	    Uint C_debug_val = 0,A_debug_val = 0,B_debug_val = 0;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 31      // Ull A_row_size = M, A_col_size = K, B_row_size = K, B_col_size = N;
 32      // Uint* paddings = A_sparse->paddings;
 33  
 34      Uint top,blk,b_col_B_col_blk;
 35      Ull c_index,c_index1,c_index2,c_index3;
!36      Uint C_debug_val = 0,A_debug_val = 0,B_debug_val = 0;
 37  
 38      #define NCHIP 1
 39      size_t A_row_size = params->A_row_size_param;   // 縛りなし
 40      size_t A_col_size = params->A_col_size_param;   // 縛りなし　H_padのおかげ
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000400e3e in main at test_chipA_spmv_multi_real_data_test.c:42
	breakpoint already hit 1 time
2       breakpoint     keep y   0x00000000004201e3 in spmv_sparse_CHIP_div_A at kernel/spmv_sparse_CHIP_div_A.c:36
	breakpoint already hit 2 times
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Thread 1 "test_chipA_spmv" hit Breakpoint 2, spmv_sparse_CHIP_div_A (C=0x7fffb2643b80, A=0x7fffaa97b010, B=0x7fffb263fc90, A_sparse=0x72ba00, params=0x7fffffffe230) at kernel/spmv_sparse_CHIP_div_A.c:36
36	    Uint C_debug_val = 0,A_debug_val = 0,B_debug_val = 0;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 31      // Ull A_row_size = M, A_col_size = K, B_row_size = K, B_col_size = N;
 32      // Uint* paddings = A_sparse->paddings;
 33  
 34      Uint top,blk,b_col_B_col_blk;
 35      Ull c_index,c_index1,c_index2,c_index3;
!36      Uint C_debug_val = 0,A_debug_val = 0,B_debug_val = 0;
 37  
 38      #define NCHIP 1
 39      size_t A_row_size = params->A_row_size_param;   // 縛りなし
 40      size_t A_col_size = params->A_col_size_param;   // 縛りなし　H_padのおかげ
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Num     Type           Disp Enb Address            What
2       breakpoint     keep y   0x00000000004201e3 in spmv_sparse_CHIP_div_A at kernel/spmv_sparse_CHIP_div_A.c:36
	breakpoint already hit 3 times
Num     Type           Disp Enb Address            What
2       breakpoint     keep y   0x00000000004201e3 in spmv_sparse_CHIP_div_A at kernel/spmv_sparse_CHIP_div_A.c:36
	breakpoint already hit 3 times
Breakpoint 3 at 0x4201e3: file kernel/spmv_sparse_CHIP_div_A.c, line 36.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Thread 1 "test_chipA_spmv" hit Breakpoint 3, spmv_sparse_CHIP_div_A (C=0x7fffb23a0890, A=0x7fffaa97b010, B=0x7fffb239ca10, A_sparse=0x72ba00, params=0x7fffffffe230) at kernel/spmv_sparse_CHIP_div_A.c:36
36	    Uint C_debug_val = 0,A_debug_val = 0,B_debug_val = 0;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 31      // Ull A_row_size = M, A_col_size = K, B_row_size = K, B_col_size = N;
 32      // Uint* paddings = A_sparse->paddings;
 33  
 34      Uint top,blk,b_col_B_col_blk;
 35      Ull c_index,c_index1,c_index2,c_index3;
!36      Uint C_debug_val = 0,A_debug_val = 0,B_debug_val = 0;
 37  
 38      #define NCHIP 1
 39      size_t A_row_size = params->A_row_size_param;   // 縛りなし
 40      size_t A_col_size = params->A_col_size_param;   // 縛りなし　H_padのおかげ
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Num     Type           Disp Enb Address            What
3       breakpoint     keep y   0x00000000004201e3 in spmv_sparse_CHIP_div_A at kernel/spmv_sparse_CHIP_div_A.c:36
	breakpoint already hit 1 time
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x2a) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000555555555469 in main at test_chipA_spmv_multi_real_data_test.c:41
	breakpoint already hit 1 time
Breakpoint 2 at 0x555555573b82: file kernel/spmv_sparse_CHIP_div_A.c, line 7.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, spmv_sparse_CHIP_div_A (C=0x0, A=0x0, B=0x0, A_sparse=0x0, params=0x0) at kernel/spmv_sparse_CHIP_div_A.c:7
7	void spmv_sparse_CHIP_div_A(Uint* C, const Uint* A, const Uint* B,emax6_sparse2* A_sparse,emax6_param* params) {
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  2  #define NO_EMAX6LIB_BODY
  3  #endif
  4  #include "../Include/kernel_lib.h"
  5  
  6  #if 1
! 7  void spmv_sparse_CHIP_div_A(Uint* C, const Uint* A, const Uint* B,emax6_sparse2* A_sparse,emax6_param* params) {
  8      // args: A IMAX_CSR_format
  9      // arg B fortran continues simd format
 10      // arg C fortran continues simd format
 11      // A_col_blk=2 スケジューリング方法を変更
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, spmv_sparse_CHIP_div_A (C=0x7fffee5b21b0, A=0x7fffe6988010, B=0x7fffee5ae310, A_sparse=0x55555566c6d0, params=0x7fffffffe340) at kernel/spmv_sparse_CHIP_div_A.c:7
7	void spmv_sparse_CHIP_div_A(Uint* C, const Uint* A, const Uint* B,emax6_sparse2* A_sparse,emax6_param* params) {
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  2  #define NO_EMAX6LIB_BODY
  3  #endif
  4  #include "../Include/kernel_lib.h"
  5  
  6  #if 1
! 7  void spmv_sparse_CHIP_div_A(Uint* C, const Uint* A, const Uint* B,emax6_sparse2* A_sparse,emax6_param* params) {
  8      // args: A IMAX_CSR_format
  9      // arg B fortran continues simd format
 10      // arg C fortran continues simd format
 11      // A_col_blk=2 スケジューリング方法を変更
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x2a) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
No symbol table is loaded.  Use the "file" command.
Make breakpoint pending on future shared library load? (y or [n]) [answered N; input not from terminal]
gdbinit:71: Error in sourced command file:
No executable file specified.
Use the "file" or "exec-file" command.
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x2a) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x5555555557bc: file test_chipA_spmv_multi_real_data_test.c, line 134.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe548) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129      if((fp1=fopen(dataset_names[data_index],"r"))==NULL){
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
!134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
 135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe548) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129      if((fp1=fopen(dataset_names[data_index],"r"))==NULL){
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
!134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
 135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
135	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
!134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
 135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
 139      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
136	    get_param(&params,&init_params);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
!134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
 135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
 139      B_row_size = params.B_row_size_param;
 140      B_col_size = params.B_col_size_param = 1;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param (params=0x1, init_param=0x1) at util/conf_param.c:302
302	void get_param(emax6_param* params,init_param* init_param){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 297  }
 298  
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
303	    Uint emax6_mode = params->mode;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 298  
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
304	    Uint init_mode  = init_param->mode;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
305	    bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
306	    bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
307	    bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
309	    if(INITIAL_MEMBASE_valid&&SPMV_valid){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
312	    else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
 314      }
 315      else{
 316          fprintf(stderr,"This pattern does not exist conf_param.c:%d \n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
313	        get_param_spmv_from_file(params,init_param);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
 314      }
 315      else{
 316          fprintf(stderr,"This pattern does not exist conf_param.c:%d \n",__LINE__);
 317          exit(1);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param_spmv_from_file (params=0x0, init_param=0x0) at util/conf_param.c:213
213	static void get_param_spmv_from_file(emax6_param* params,init_param* init_param){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 208  void mem_reset_offset(){
 209      mem_current = membase1;
 210  }
 211  
 212  
 213  static void get_param_spmv_from_file(emax6_param* params,init_param* init_param){
 214      Uint A_row_size, A_col_size; 
 215      Uint A_row_size_pad, A_col_size_pad; 
 216      Uint B_row_size, B_col_size; 
 217      Uint B_row_size_pad, B_col_size_pad; 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
219	    int nnz = 0;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 214      Uint A_row_size, A_col_size; 
 215      Uint A_row_size_pad, A_col_size_pad; 
 216      Uint B_row_size, B_col_size; 
 217      Uint B_row_size_pad, B_col_size_pad; 
 218      size_t W; 
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
223	    Uint H = params->H_param;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 218      size_t W; 
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
224	    FILE* f = init_param->fp;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
227	    if (!f) {
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
 232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
241	    if (mm_is_complex(matcode) && mm_is_matrix(matcode) && 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 236      }
 237  
 238      /*  This is how one can screen matrix types if their application */
 239      /*  only supports a subset of the Matrix Market data types.      */
 240  
 241      if (mm_is_complex(matcode) && mm_is_matrix(matcode) && 
 242              mm_is_sparse(matcode) )
 243      {
 244          printf("Sorry, this application does not support ");
 245          printf("Market Market type: [%s]\n", mm_typecode_to_str(matcode));
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe548) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129      if((fp1=fopen(dataset_names[data_index],"r"))==NULL){
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
!134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
 135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
135	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
!134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
 135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
 139      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
136	    get_param(&params,&init_params);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
!134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
 135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
 139      B_row_size = params.B_row_size_param;
 140      B_col_size = params.B_col_size_param = 1;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param (params=0x1, init_param=0x1) at util/conf_param.c:302
302	void get_param(emax6_param* params,init_param* init_param){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 297  }
 298  
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
303	    Uint emax6_mode = params->mode;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 298  
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
304	    Uint init_mode  = init_param->mode;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
305	    bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
306	    bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
307	    bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
309	    if(INITIAL_MEMBASE_valid&&SPMV_valid){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
312	    else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
 314      }
 315      else{
 316          fprintf(stderr,"This pattern does not exist conf_param.c:%d \n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
313	        get_param_spmv_from_file(params,init_param);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
 314      }
 315      else{
 316          fprintf(stderr,"This pattern does not exist conf_param.c:%d \n",__LINE__);
 317          exit(1);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param_spmv_from_file (params=0x0, init_param=0x0) at util/conf_param.c:213
213	static void get_param_spmv_from_file(emax6_param* params,init_param* init_param){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 208  void mem_reset_offset(){
 209      mem_current = membase1;
 210  }
 211  
 212  
 213  static void get_param_spmv_from_file(emax6_param* params,init_param* init_param){
 214      Uint A_row_size, A_col_size; 
 215      Uint A_row_size_pad, A_col_size_pad; 
 216      Uint B_row_size, B_col_size; 
 217      Uint B_row_size_pad, B_col_size_pad; 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
219	    int nnz = 0;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 214      Uint A_row_size, A_col_size; 
 215      Uint A_row_size_pad, A_col_size_pad; 
 216      Uint B_row_size, B_col_size; 
 217      Uint B_row_size_pad, B_col_size_pad; 
 218      size_t W; 
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
223	    Uint H = params->H_param;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 218      size_t W; 
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
224	    FILE* f = init_param->fp;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
227	    if (!f) {
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
 232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
241	    if (mm_is_complex(matcode) && mm_is_matrix(matcode) && 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 236      }
 237  
 238      /*  This is how one can screen matrix types if their application */
 239      /*  only supports a subset of the Matrix Market data types.      */
 240  
 241      if (mm_is_complex(matcode) && mm_is_matrix(matcode) && 
 242              mm_is_sparse(matcode) )
 243      {
 244          printf("Sorry, this application does not support ");
 245          printf("Market Market type: [%s]\n", mm_typecode_to_str(matcode));
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
251	    if ((ret_code = mm_read_mtx_crd_size(f, &A_row_size, &A_col_size, &nnz)) !=0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 246          exit(1);
 247      }
 248  
 249      /* find out size of sparse matrix .... */
 250  
 251      if ((ret_code = mm_read_mtx_crd_size(f, &A_row_size, &A_col_size, &nnz)) !=0)
 252          exit(1);
 253  
 254  
 255          /* reseve memory for matrices */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
256	    B_row_size = A_col_size;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 251      if ((ret_code = mm_read_mtx_crd_size(f, &A_row_size, &A_col_size, &nnz)) !=0)
 252          exit(1);
 253  
 254  
 255          /* reseve memory for matrices */
 256      B_row_size = A_col_size;
 257      GET_PAD_SIZE(A_col_size_pad,A_col_size,H);
 258  
 259  
 260      if((A_row_size == 0)||(A_col_size == 0)||(B_row_size == 0)){
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
257	    GET_PAD_SIZE(A_col_size_pad,A_col_size,H);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 252          exit(1);
 253  
 254  
 255          /* reseve memory for matrices */
 256      B_row_size = A_col_size;
 257      GET_PAD_SIZE(A_col_size_pad,A_col_size,H);
 258  
 259  
 260      if((A_row_size == 0)||(A_col_size == 0)||(B_row_size == 0)){
 261          fprintf(stderr,"invalid size conf_param.c:%d\n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
260	    if((A_row_size == 0)||(A_col_size == 0)||(B_row_size == 0)){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 255          /* reseve memory for matrices */
 256      B_row_size = A_col_size;
 257      GET_PAD_SIZE(A_col_size_pad,A_col_size,H);
 258  
 259  
 260      if((A_row_size == 0)||(A_col_size == 0)||(B_row_size == 0)){
 261          fprintf(stderr,"invalid size conf_param.c:%d\n",__LINE__);
 262          exit(1);
 263      }
 264      if(params->mode == DENSE_SPMV_MODE){
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
264	    if(params->mode == DENSE_SPMV_MODE){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 259  
 260      if((A_row_size == 0)||(A_col_size == 0)||(B_row_size == 0)){
 261          fprintf(stderr,"invalid size conf_param.c:%d\n",__LINE__);
 262          exit(1);
 263      }
 264      if(params->mode == DENSE_SPMV_MODE){
 265          W = 4;
 266          GET_PAD_SIZE(A_row_size_pad,A_row_size,(W*2));
 267          GET_PAD_SIZE(B_row_size_pad,B_row_size,H);
 268      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
269	    else if(params->mode == SPARSE_DENSE_58_SPMV_MODE){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 264      if(params->mode == DENSE_SPMV_MODE){
 265          W = 4;
 266          GET_PAD_SIZE(A_row_size_pad,A_row_size,(W*2));
 267          GET_PAD_SIZE(B_row_size_pad,B_row_size,H);
 268      }
 269      else if(params->mode == SPARSE_DENSE_58_SPMV_MODE){
 270          W = 2;
 271          GET_PAD_SIZE(A_row_size_pad,A_row_size,(W*2));
 272          B_row_size_pad = B_row_size;  
 273      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe548) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129      if((fp1=fopen(dataset_names[data_index],"r"))==NULL){
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
!134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
 135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe548) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129      if((fp1=fopen(dataset_names[data_index],"r"))==NULL){
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
!134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
 135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[Inferior 1 (process 959846) exited with code 01]
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x2a) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x5555555557c6: file test_chipA_spmv_multi_real_data_test.c, line 135.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe548) at test_chipA_spmv_multi_real_data_test.c:135
135	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
 134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
 139      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe548) at test_chipA_spmv_multi_real_data_test.c:135
135	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
 134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
 139      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe548) at test_chipA_spmv_multi_real_data_test.c:135
135	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
 134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
 139      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe548) at test_chipA_spmv_multi_real_data_test.c:135
135	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 130          fprintf(stderr,"cant open data set\n");
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
 134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
 139      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
136	    get_param(&params,&init_params);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 131          exit(1);
 132      }
 133      // fp1_tmp = get_param_from_dataset(&params,fp1);
 134      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!135      init_params.fp = fp1;
 136      get_param(&params,&init_params);
 137      A_row_size = params.A_row_size_param;
 138      A_col_size = params.A_col_size_param;
 139      B_row_size = params.B_row_size_param;
 140      B_col_size = params.B_col_size_param = 1;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param (params=0x1, init_param=0x1) at util/conf_param.c:302
302	void get_param(emax6_param* params,init_param* init_param){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 297  }
 298  
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
303	    Uint emax6_mode = params->mode;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 298  
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
304	    Uint init_mode  = init_param->mode;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
305	    bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
306	    bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
307	    bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
309	    if(INITIAL_MEMBASE_valid&&SPMV_valid){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
312	    else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
 314      }
 315      else{
 316          fprintf(stderr,"This pattern does not exist conf_param.c:%d \n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
313	        get_param_spmv_from_file(params,init_param);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
 314      }
 315      else{
 316          fprintf(stderr,"This pattern does not exist conf_param.c:%d \n",__LINE__);
 317          exit(1);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param_spmv_from_file (params=0x0, init_param=0x0) at util/conf_param.c:213
213	static void get_param_spmv_from_file(emax6_param* params,init_param* init_param){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 208  void mem_reset_offset(){
 209      mem_current = membase1;
 210  }
 211  
 212  
 213  static void get_param_spmv_from_file(emax6_param* params,init_param* init_param){
 214      Uint A_row_size, A_col_size; 
 215      Uint A_row_size_pad, A_col_size_pad; 
 216      Uint B_row_size, B_col_size; 
 217      Uint B_row_size_pad, B_col_size_pad; 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
219	    int nnz = 0;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 214      Uint A_row_size, A_col_size; 
 215      Uint A_row_size_pad, A_col_size_pad; 
 216      Uint B_row_size, B_col_size; 
 217      Uint B_row_size_pad, B_col_size_pad; 
 218      size_t W; 
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
223	    Uint H = params->H_param;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 218      size_t W; 
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
224	    FILE* f = init_param->fp;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
227	    if (!f) {
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 222      MM_typecode matcode;
 223      Uint H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
No symbol "fp" in current context.
$1 = (FILE *) 0x55555564e490
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
 232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
234	        printf("Could not process Matrix Market banner.\n");
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 229      exit(1);
 230      }
 231      
 232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
 237  
 238      /*  This is how one can screen matrix types if their application */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$2 = {
  _flags = -72539000,
  _IO_read_ptr = 0x55555564e76a "0.56,36.00,0.75,24.00,0.37,12.00,0.00,3057,3057,3057,1,2,1,1,1,4,201628138,0,0,0,0,0,0,201628138\n1\n3756 3757 -1\n3758 3757 1\n3757 3758 -1\n3759 3758 1\n3758 3759 -1\n3760 3759 1\n3759 3760 -1\n3761 3760 1\n3"...,
  _IO_read_end = 0x55555564e7cb "1\n3756 3757 -1\n3758 3757 1\n3757 3758 -1\n3759 3758 1\n3758 3759 -1\n3760 3759 1\n3759 3760 -1\n3761 3760 1\n3760 3761 -1\n3762 3761 1\n3761 3762 -1\n3763 3762 1\n3762 3763 -1\n3764 3763 1\n3763 3764 -1\n3765 3764 "...,
  _IO_read_base = 0x55555564e670 "LMM_usage_rate,LMM_usage_kbyte,LMM_usage_A_rate,LMM_usage_A_kbyte,LMM_usage_B_rate,LMM_usage_B_kbyte,sparse_rate,A_row_size,A_col_size,B_row_size,B_col_size,A_col_blk,B_col_blk,C_col_blk,NCHIP,W,ARM,D"...,
  _IO_write_base = 0x55555564e670 "LMM_usage_rate,LMM_usage_kbyte,LMM_usage_A_rate,LMM_usage_A_kbyte,LMM_usage_B_rate,LMM_usage_B_kbyte,sparse_rate,A_row_size,A_col_size,B_row_size,B_col_size,A_col_blk,B_col_blk,C_col_blk,NCHIP,W,ARM,D"...,
  _IO_write_ptr = 0x55555564e670 "LMM_usage_rate,LMM_usage_kbyte,LMM_usage_A_rate,LMM_usage_A_kbyte,LMM_usage_B_rate,LMM_usage_B_kbyte,sparse_rate,A_row_size,A_col_size,B_row_size,B_col_size,A_col_blk,B_col_blk,C_col_blk,NCHIP,W,ARM,D"...,
  _IO_write_end = 0x55555564e670 "LMM_usage_rate,LMM_usage_kbyte,LMM_usage_A_rate,LMM_usage_A_kbyte,LMM_usage_B_rate,LMM_usage_B_kbyte,sparse_rate,A_row_size,A_col_size,B_row_size,B_col_size,A_col_blk,B_col_blk,C_col_blk,NCHIP,W,ARM,D"...,
  _IO_buf_base = 0x55555564e670 "LMM_usage_rate,LMM_usage_kbyte,LMM_usage_A_rate,LMM_usage_A_kbyte,LMM_usage_B_rate,LMM_usage_B_kbyte,sparse_rate,A_row_size,A_col_size,B_row_size,B_col_size,A_col_blk,B_col_blk,C_col_blk,NCHIP,W,ARM,D"...,
  _IO_buf_end = 0x555555650670 "\020 ",
  _IO_save_base = 0x0,
  _IO_backup_base = 0x0,
  _IO_save_end = 0x0,
  _markers = 0x0,
  _chain = 0x55555564c2a0,
  _fileno = 4,
  _flags2 = 0,
  _old_offset = 0,
  _cur_column = 0,
  _vtable_offset = 0 '\000',
  _shortbuf = "",
  _lock = 0x55555564e570,
  _offset = -1,
  _codecvt = 0x0,
  _wide_data = 0x55555564e580,
  _freeres_list = 0x0,
  _freeres_buf = 0x0,
  __pad5 = 0,
  _mode = -1,
  _unused2 = '\000' <repeats 19 times>
}
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x7ffff7fcfb00) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x5555555653f8: file util/conf_param.c, line 234.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:234
234	        printf("Could not process Matrix Market banner.\n");
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 229      exit(1);
 230      }
 231      
 232      if (mm_read_banner(f, &matcode) != 0)
 233      {
!234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
 237  
 238      /*  This is how one can screen matrix types if their application */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$1 = "   G"
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x7ffff7fcfb00) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x5555555653f8: file util/conf_param.c, line 234.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:234
234	        printf("Could not process Matrix Market banner.\n");
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 229      exit(1);
 230      }
 231      
 232      if (mm_read_banner(f, &matcode) != 0)
 233      {
!234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
 237  
 238      /*  This is how one can screen matrix types if their application */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x7ffff7fcfb00) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x5555555653e1: file util/conf_param.c, line 232.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[Inferior 1 (process 963327) exited with code 01]
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x7ffff7fcfb00) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x5555555653e1: file util/conf_param.c, line 232.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
mm_read_banner (f=0x0, matcode=0xffffffffffffffff) at 3rd/Matrix_Format_Io/mmio.c:97
97	{
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  92                  mm_is_skew(matcode))) return 0;
  93      return 1;
  94  }
  95  
  96  int mm_read_banner(FILE *f, MM_typecode *matcode)
  97  {
  98      char line[MM_MAX_LINE_LENGTH];
  99      char banner[MM_MAX_TOKEN_LENGTH];
 100      char mtx[MM_MAX_TOKEN_LENGTH]; 
 101      char crd[MM_MAX_TOKEN_LENGTH];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
107	    mm_clear_typecode(matcode);  
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 102      char data_type[MM_MAX_TOKEN_LENGTH];
 103      char storage_scheme[MM_MAX_TOKEN_LENGTH];
 104      char *p;
 105  
 106  
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
109	    if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 104      char *p;
 105  
 106  
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
112	    if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
 114          return MM_PREMATURE_EOF;
 115  
 116      for (p=mtx; *p!='\0'; *p=tolower(*p),p++);  /* convert to lower case */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
114	        return MM_PREMATURE_EOF;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
 114          return MM_PREMATURE_EOF;
 115  
 116      for (p=mtx; *p!='\0'; *p=tolower(*p),p++);  /* convert to lower case */
 117      for (p=crd; *p!='\0'; *p=tolower(*p),p++);  
 118      for (p=data_type; *p!='\0'; *p=tolower(*p),p++);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
179	}
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 174      else
 175          return MM_UNSUPPORTED_TYPE;
 176          
 177  
 178      return 0;
 179  }
 180  
 181  int mm_write_mtx_crd_size(FILE *f, int M, int N, int nz)
 182  {
 183      if (fprintf(f, "%d %d %d\n", M, N, nz) != 3)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
234	        printf("Could not process Matrix Market banner.\n");
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
 237  
 238      /*  This is how one can screen matrix types if their application */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x7ffff7fcfb00) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x5555555653e1: file util/conf_param.c, line 232.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
mm_read_banner (f=0x0, matcode=0xffffffffffffffff) at 3rd/Matrix_Format_Io/mmio.c:97
97	{
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  92                  mm_is_skew(matcode))) return 0;
  93      return 1;
  94  }
  95  
  96  int mm_read_banner(FILE *f, MM_typecode *matcode)
  97  {
  98      char line[MM_MAX_LINE_LENGTH];
  99      char banner[MM_MAX_TOKEN_LENGTH];
 100      char mtx[MM_MAX_TOKEN_LENGTH]; 
 101      char crd[MM_MAX_TOKEN_LENGTH];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
107	    mm_clear_typecode(matcode);  
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 102      char data_type[MM_MAX_TOKEN_LENGTH];
 103      char storage_scheme[MM_MAX_TOKEN_LENGTH];
 104      char *p;
 105  
 106  
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
109	    if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 104      char *p;
 105  
 106  
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
112	    if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
 114          return MM_PREMATURE_EOF;
 115  
 116      for (p=mtx; *p!='\0'; *p=tolower(*p),p++);  /* convert to lower case */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
114	        return MM_PREMATURE_EOF;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
 114          return MM_PREMATURE_EOF;
 115  
 116      for (p=mtx; *p!='\0'; *p=tolower(*p),p++);  /* convert to lower case */
 117      for (p=crd; *p!='\0'; *p=tolower(*p),p++);  
 118      for (p=data_type; *p!='\0'; *p=tolower(*p),p++);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
179	}
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 174      else
 175          return MM_UNSUPPORTED_TYPE;
 176          
 177  
 178      return 0;
 179  }
 180  
 181  int mm_write_mtx_crd_size(FILE *f, int M, int N, int nz)
 182  {
 183      if (fprintf(f, "%d %d %d\n", M, N, nz) != 3)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x7ffff7fcfb00) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x5555555653e1: file util/conf_param.c, line 232.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
!232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
mm_read_banner (f=0x0, matcode=0xffffffffffffffff) at 3rd/Matrix_Format_Io/mmio.c:97
97	{
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  92                  mm_is_skew(matcode))) return 0;
  93      return 1;
  94  }
  95  
  96  int mm_read_banner(FILE *f, MM_typecode *matcode)
  97  {
  98      char line[MM_MAX_LINE_LENGTH];
  99      char banner[MM_MAX_TOKEN_LENGTH];
 100      char mtx[MM_MAX_TOKEN_LENGTH]; 
 101      char crd[MM_MAX_TOKEN_LENGTH];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
107	    mm_clear_typecode(matcode);  
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 102      char data_type[MM_MAX_TOKEN_LENGTH];
 103      char storage_scheme[MM_MAX_TOKEN_LENGTH];
 104      char *p;
 105  
 106  
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
109	    if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 104      char *p;
 105  
 106  
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
112	    if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
 114          return MM_PREMATURE_EOF;
 115  
 116      for (p=mtx; *p!='\0'; *p=tolower(*p),p++);  /* convert to lower case */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
114	        return MM_PREMATURE_EOF;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
 114          return MM_PREMATURE_EOF;
 115  
 116      for (p=mtx; *p!='\0'; *p=tolower(*p),p++);  /* convert to lower case */
 117      for (p=crd; *p!='\0'; *p=tolower(*p),p++);  
 118      for (p=data_type; *p!='\0'; *p=tolower(*p),p++);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$1 = "LMM_usage_rate,LMM_usage_kbyte,LMM_usage_A_rate,LMM_usage_A_kbyt"
$2 = "LMM_usage_rate,LMM_usage_kbyte,LMM_usage_A_rate,LMM_usage_A_kbyte,LMM_usage_B_rate,LMM_usage_B_kbyte,sparse_rate,A_row_size,A_col_size,B_row_size,B_col_size,A_col_blk,B_col_blk,C_col_blk,NCHIP,W,ARM,D"...
#0  mm_read_banner (f=0x55555564e490, matcode=0x7fffffffe174) at 3rd/Matrix_Format_Io/mmio.c:114
#1  0x00005555555653f4 in get_param_spmv_from_file (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:232
#2  0x0000555555565804 in get_param (params=0x7fffffffe370, init_param=0x7fffffffe2f0) at util/conf_param.c:313
#3  0x00005555555557ee in main (argc=1, argv=0x7fffffffe578) at test_chipA_spmv_multi_real_data_test.c:135
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x7ffff7fcfb00) at test_chipA_spmv_multi_real_data_test.c:41
warning: Source file is more recent than executable.
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x5555555557c7: file test_chipA_spmv_multi_real_data_test.c, line 134.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe578) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129          fprintf(stderr,"cant open data set\n");
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
 133      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!134      init_params.fp = fp1;
 135      get_param(&params,&init_params);
 136      A_row_size = params.A_row_size_param;
 137      A_col_size = params.A_col_size_param;
 138      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe578) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129          fprintf(stderr,"cant open data set\n");
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
 133      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!134      init_params.fp = fp1;
 135      get_param(&params,&init_params);
 136      A_row_size = params.A_row_size_param;
 137      A_col_size = params.A_col_size_param;
 138      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe578) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129          fprintf(stderr,"cant open data set\n");
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
 133      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!134      init_params.fp = fp1;
 135      get_param(&params,&init_params);
 136      A_row_size = params.A_row_size_param;
 137      A_col_size = params.A_col_size_param;
 138      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe578) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129          fprintf(stderr,"cant open data set\n");
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
 133      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!134      init_params.fp = fp1;
 135      get_param(&params,&init_params);
 136      A_row_size = params.A_row_size_param;
 137      A_col_size = params.A_col_size_param;
 138      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$1 = (FILE *) 0x55555564e490
$2 = {
  _flags = -72539000,
  _IO_read_ptr = 0x0,
  _IO_read_end = 0x0,
  _IO_read_base = 0x0,
  _IO_write_base = 0x0,
  _IO_write_ptr = 0x0,
  _IO_write_end = 0x0,
  _IO_buf_base = 0x0,
  _IO_buf_end = 0x0,
  _IO_save_base = 0x0,
  _IO_backup_base = 0x0,
  _IO_save_end = 0x0,
  _markers = 0x0,
  _chain = 0x55555564c2a0,
  _fileno = 4,
  _flags2 = 0,
  _old_offset = 0,
  _cur_column = 0,
  _vtable_offset = 0 '\000',
  _shortbuf = "",
  _lock = 0x55555564e570,
  _offset = -1,
  _codecvt = 0x0,
  _wide_data = 0x55555564e580,
  _freeres_list = 0x0,
  _freeres_buf = 0x0,
  __pad5 = 0,
  _mode = 0,
  _unused2 = '\000' <repeats 19 times>
}
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
135	    get_param(&params,&init_params);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
 133      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!134      init_params.fp = fp1;
 135      get_param(&params,&init_params);
 136      A_row_size = params.A_row_size_param;
 137      A_col_size = params.A_col_size_param;
 138      B_row_size = params.B_row_size_param;
 139      B_col_size = params.B_col_size_param = 1;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param (params=0x1, init_param=0x1) at util/conf_param.c:302
302	void get_param(emax6_param* params,init_param* init_param){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 297  }
 298  
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
303	    Uint emax6_mode = params->mode;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 298  
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
304	    Uint init_mode  = init_param->mode;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
305	    bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
306	    bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
307	    bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
309	    if(INITIAL_MEMBASE_valid&&SPMV_valid){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
312	    else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
 314      }
 315      else{
 316          fprintf(stderr,"This pattern does not exist conf_param.c:%d \n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
313	        get_param_spmv_from_file(params,init_param);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
 314      }
 315      else{
 316          fprintf(stderr,"This pattern does not exist conf_param.c:%d \n",__LINE__);
 317          exit(1);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param_spmv_from_file (params=0x0, init_param=0x0) at util/conf_param.c:213
213	static void get_param_spmv_from_file(emax6_param* params,init_param* init_param){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 208  void mem_reset_offset(){
 209      mem_current = membase1;
 210  }
 211  
 212  
 213  static void get_param_spmv_from_file(emax6_param* params,init_param* init_param){
 214      Uint A_row_size, A_col_size; 
 215      Uint A_row_size_pad, A_col_size_pad; 
 216      Uint B_row_size, B_col_size; 
 217      Uint B_row_size_pad, B_col_size_pad; 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
219	    int nnz = 0;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 214      Uint A_row_size, A_col_size; 
 215      Uint A_row_size_pad, A_col_size_pad; 
 216      Uint B_row_size, B_col_size; 
 217      Uint B_row_size_pad, B_col_size_pad; 
 218      size_t W; 
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      size_t H = params->H_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
223	    size_t H = params->H_param;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 218      size_t W; 
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      size_t H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
224	    FILE* f = init_param->fp;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      size_t H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
227	    if (!f) {
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 222      MM_typecode matcode;
 223      size_t H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
No symbol "fp" in current context.
$3 = {
  _flags = -72539000,
  _IO_read_ptr = 0x0,
  _IO_read_end = 0x0,
  _IO_read_base = 0x0,
  _IO_write_base = 0x0,
  _IO_write_ptr = 0x0,
  _IO_write_end = 0x0,
  _IO_buf_base = 0x0,
  _IO_buf_end = 0x0,
  _IO_save_base = 0x0,
  _IO_backup_base = 0x0,
  _IO_save_end = 0x0,
  _markers = 0x0,
  _chain = 0x55555564c2a0,
  _fileno = 4,
  _flags2 = 0,
  _old_offset = 0,
  _cur_column = 0,
  _vtable_offset = 0 '\000',
  _shortbuf = "",
  _lock = 0x55555564e570,
  _offset = -1,
  _codecvt = 0x0,
  _wide_data = 0x55555564e580,
  _freeres_list = 0x0,
  _freeres_buf = 0x0,
  __pad5 = 0,
  _mode = 0,
  _unused2 = '\000' <repeats 19 times>
}
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
 232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
mm_read_banner (f=0x0, matcode=0xffffffffffffffff) at 3rd/Matrix_Format_Io/mmio.c:97
97	{
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  92                  mm_is_skew(matcode))) return 0;
  93      return 1;
  94  }
  95  
  96  int mm_read_banner(FILE *f, MM_typecode *matcode)
  97  {
  98      char line[MM_MAX_LINE_LENGTH];
  99      char banner[MM_MAX_TOKEN_LENGTH];
 100      char mtx[MM_MAX_TOKEN_LENGTH]; 
 101      char crd[MM_MAX_TOKEN_LENGTH];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
107	    mm_clear_typecode(matcode);  
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 102      char data_type[MM_MAX_TOKEN_LENGTH];
 103      char storage_scheme[MM_MAX_TOKEN_LENGTH];
 104      char *p;
 105  
 106  
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
109	    if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 104      char *p;
 105  
 106  
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
112	    if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
 114          return MM_PREMATURE_EOF;
 115  
 116      for (p=mtx; *p!='\0'; *p=tolower(*p),p++);  /* convert to lower case */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$4 = "LMM_usage_rate,LMM_usage_kbyte,LMM_usage_A_rate,LMM_usage_A_kbyte,LMM_usage_B_rate,LMM_usage_B_kbyte,sparse_rate,A_row_size,A_col_size,B_row_size,B_col_size,A_col_blk,B_col_blk,C_col_blk,NCHIP,W,ARM,D"...
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x7ffff7fcfb00) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$1 = (FILE *) 0x7fffffffe201
$2 = {
  _flags = 0,
  _IO_read_ptr = 0x5000000000000000 <error: Cannot access memory at address 0x5000000000000000>,
  _IO_read_end = 0x7800007ffff7fc7f <error: Cannot access memory at address 0x7800007ffff7fc7f>,
  _IO_read_base = 0x5ef353e1d05f <error: Cannot access memory at address 0x5ef353e1d05f>,
  _IO_write_base = 0x9000000000000000 <error: Cannot access memory at address 0x9000000000000000>,
  _IO_write_ptr = 0xf800007ffff7ffe1 <error: Cannot access memory at address 0xf800007ffff7ffe1>,
  _IO_write_end = 0x70ffffffffffffff <error: Cannot access memory at address 0x70ffffffffffffff>,
  _IO_buf_base = 0x4000007ffff7fe8f <error: Cannot access memory at address 0x4000007ffff7fe8f>,
  _IO_buf_end = 0xab00007fffffffe4 <error: Cannot access memory at address 0xab00007fffffffe4>,
  _IO_save_base = 0x7ffff7fd37 <error: Cannot access memory at address 0x7ffff7fd37>,
  _IO_backup_base = 0x0,
  _IO_save_end = 0xd400000000000000 <error: Cannot access memory at address 0xd400000000000000>,
  _markers = 0xffffaaaaaaaabc,
  _chain = 0x400000000000000,
  _fileno = 0,
  _flags2 = 16777216,
  _old_offset = 0,
  _cur_column = 65511,
  _vtable_offset = -9 '\367',
  _shortbuf = "\377",
  _lock = 0x6000007ffff7fc86,
  _offset = 72058143793217505,
  _codecvt = 0xe800007fffffffe2,
  _wide_data = 0x7ffff7ffd9,
  _freeres_list = 0x0,
  _freeres_buf = 0x0,
  __pad5 = 0,
  _mode = 0,
  _unused2 = '\000' <repeats 11 times>, "(\322\374\367\377\177\000\000"
}
Undefined command: "fp1".  Try "help".
Hardware watchpoint 2: fp1
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Hardware watchpoint 2: fp1

Old value = (FILE *) 0x7fffffffe201
New value = (FILE *) 0x55555564e490
main (argc=1, argv=0x7fffffffe578) at test_chipA_spmv_multi_real_data_test.c:128
128	    if((fp1=fopen(dataset_names[data_index],"r"))==NULL){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 123  #if !defined(CSIMDEBUG)
 124  STORE_CSV_INI(fp);
 125  #endif
 126  //fpをparam取得まで進める
 127  for(data_index=0; data_index<data_index_len; data_index++){
 128      if((fp1=fopen(dataset_names[data_index],"r"))==NULL){
 129          fprintf(stderr,"cant open data set\n");
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[Inferior 1 (process 969840) exited with code 01]
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x7ffff7fcfb00) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x5555555557c7: file test_chipA_spmv_multi_real_data_test.c, line 134.
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe578) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129          fprintf(stderr,"cant open data set\n");
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
 133      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!134      init_params.fp = fp1;
 135      get_param(&params,&init_params);
 136      A_row_size = params.A_row_size_param;
 137      A_col_size = params.A_col_size_param;
 138      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe578) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129          fprintf(stderr,"cant open data set\n");
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
 133      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!134      init_params.fp = fp1;
 135      get_param(&params,&init_params);
 136      A_row_size = params.A_row_size_param;
 137      A_col_size = params.A_col_size_param;
 138      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe578) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129          fprintf(stderr,"cant open data set\n");
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
 133      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!134      init_params.fp = fp1;
 135      get_param(&params,&init_params);
 136      A_row_size = params.A_row_size_param;
 137      A_col_size = params.A_col_size_param;
 138      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=1, argv=0x7fffffffe578) at test_chipA_spmv_multi_real_data_test.c:134
134	    init_params.fp = fp1;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 129          fprintf(stderr,"cant open data set\n");
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
 133      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!134      init_params.fp = fp1;
 135      get_param(&params,&init_params);
 136      A_row_size = params.A_row_size_param;
 137      A_col_size = params.A_col_size_param;
 138      B_row_size = params.B_row_size_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$1 = (FILE *) 0x55555564e490
$2 = {
  _flags = -72539000,
  _IO_read_ptr = 0x0,
  _IO_read_end = 0x0,
  _IO_read_base = 0x0,
  _IO_write_base = 0x0,
  _IO_write_ptr = 0x0,
  _IO_write_end = 0x0,
  _IO_buf_base = 0x0,
  _IO_buf_end = 0x0,
  _IO_save_base = 0x0,
  _IO_backup_base = 0x0,
  _IO_save_end = 0x0,
  _markers = 0x0,
  _chain = 0x55555564c2a0,
  _fileno = 4,
  _flags2 = 0,
  _old_offset = 0,
  _cur_column = 0,
  _vtable_offset = 0 '\000',
  _shortbuf = "",
  _lock = 0x55555564e570,
  _offset = -1,
  _codecvt = 0x0,
  _wide_data = 0x55555564e580,
  _freeres_list = 0x0,
  _freeres_buf = 0x0,
  __pad5 = 0,
  _mode = 0,
  _unused2 = '\000' <repeats 19 times>
}
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
135	    get_param(&params,&init_params);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 130          exit(1);
 131      }
 132      // fp1_tmp = get_param_from_dataset(&params,fp1);
 133      init_params.mode = INITIAL_PARAM_FROM_FILE_DATA;
!134      init_params.fp = fp1;
 135      get_param(&params,&init_params);
 136      A_row_size = params.A_row_size_param;
 137      A_col_size = params.A_col_size_param;
 138      B_row_size = params.B_row_size_param;
 139      B_col_size = params.B_col_size_param = 1;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param (params=0x1, init_param=0x1) at util/conf_param.c:302
302	void get_param(emax6_param* params,init_param* init_param){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 297  }
 298  
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
303	    Uint emax6_mode = params->mode;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 298  
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
304	    Uint init_mode  = init_param->mode;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 299  
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
305	    bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 300  
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
306	    bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 301  
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
307	    bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 302  void get_param(emax6_param* params,init_param* init_param){
 303      Uint emax6_mode = params->mode;
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
309	    if(INITIAL_MEMBASE_valid&&SPMV_valid){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 304      Uint init_mode  = init_param->mode;
 305      bool INITIAL_MEMBASE_valid = ((init_mode == INITIAL_MEMBASE_WITH_MAT_LEN)||(init_mode == INITIAL_MEMBASE_WITH_MEMSIZE));
 306      bool INITIAL_PARAM_FROM_FILE_valid = (init_mode == INITIAL_PARAM_FROM_FILE_DATA);
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
312	    else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 307      bool SPMV_valid = ((emax6_mode == SPARSE_DENSE_58_SPMV_MODE)||(emax6_mode == DENSE_SPMV_MODE));
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
 314      }
 315      else{
 316          fprintf(stderr,"This pattern does not exist conf_param.c:%d \n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
313	        get_param_spmv_from_file(params,init_param);
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 308  
 309      if(INITIAL_MEMBASE_valid&&SPMV_valid){
 310          get_membase_spmv_init(params,init_param);
 311      }
 312      else if(INITIAL_PARAM_FROM_FILE_valid&&SPMV_valid){
 313          get_param_spmv_from_file(params,init_param);
 314      }
 315      else{
 316          fprintf(stderr,"This pattern does not exist conf_param.c:%d \n",__LINE__);
 317          exit(1);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
get_param_spmv_from_file (params=0x0, init_param=0x0) at util/conf_param.c:213
213	static void get_param_spmv_from_file(emax6_param* params,init_param* init_param){
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 208  void mem_reset_offset(){
 209      mem_current = membase1;
 210  }
 211  
 212  
 213  static void get_param_spmv_from_file(emax6_param* params,init_param* init_param){
 214      Uint A_row_size, A_col_size; 
 215      Uint A_row_size_pad, A_col_size_pad; 
 216      Uint B_row_size, B_col_size; 
 217      Uint B_row_size_pad, B_col_size_pad; 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
219	    int nnz = 0;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 214      Uint A_row_size, A_col_size; 
 215      Uint A_row_size_pad, A_col_size_pad; 
 216      Uint B_row_size, B_col_size; 
 217      Uint B_row_size_pad, B_col_size_pad; 
 218      size_t W; 
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      size_t H = params->H_param;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
223	    size_t H = params->H_param;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 218      size_t W; 
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      size_t H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$3 = 93824992727152
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
224	    FILE* f = init_param->fp;
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 219      int nnz = 0;
 220      int ret_code;
 221      int i;
 222      MM_typecode matcode;
 223      size_t H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$4 = 58
$5 = {
  _flags = -72539000,
  _IO_read_ptr = 0x0,
  _IO_read_end = 0x0,
  _IO_read_base = 0x0,
  _IO_write_base = 0x0,
  _IO_write_ptr = 0x0,
  _IO_write_end = 0x0,
  _IO_buf_base = 0x0,
  _IO_buf_end = 0x0,
  _IO_save_base = 0x0,
  _IO_backup_base = 0x0,
  _IO_save_end = 0x0,
  _markers = 0x0,
  _chain = 0x55555564c2a0,
  _fileno = 4,
  _flags2 = 0,
  _old_offset = 0,
  _cur_column = 0,
  _vtable_offset = 0 '\000',
  _shortbuf = "",
  _lock = 0x55555564e570,
  _offset = -1,
  _codecvt = 0x0,
  _wide_data = 0x55555564e580,
  _freeres_list = 0x0,
  _freeres_buf = 0x0,
  __pad5 = 0,
  _mode = 0,
  _unused2 = '\000' <repeats 19 times>
}
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
227	    if (!f) {
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 222      MM_typecode matcode;
 223      size_t H = params->H_param;
 224      FILE* f = init_param->fp;
 225      
 226  
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
232	    if (mm_read_banner(f, &matcode) != 0)
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 227      if (!f) {
 228      fprintf(stderr,"this file does not exist make_sparse_mat.c:%d\n",__LINE__);
 229      exit(1);
 230      }
 231      
 232      if (mm_read_banner(f, &matcode) != 0)
 233      {
 234          printf("Could not process Matrix Market banner.\n");
 235          exit(1);
 236      }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
mm_read_banner (f=0x0, matcode=0xffffffffffffffff) at 3rd/Matrix_Format_Io/mmio.c:97
97	{
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  92                  mm_is_skew(matcode))) return 0;
  93      return 1;
  94  }
  95  
  96  int mm_read_banner(FILE *f, MM_typecode *matcode)
  97  {
  98      char line[MM_MAX_LINE_LENGTH];
  99      char banner[MM_MAX_TOKEN_LENGTH];
 100      char mtx[MM_MAX_TOKEN_LENGTH]; 
 101      char crd[MM_MAX_TOKEN_LENGTH];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
107	    mm_clear_typecode(matcode);  
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 102      char data_type[MM_MAX_TOKEN_LENGTH];
 103      char storage_scheme[MM_MAX_TOKEN_LENGTH];
 104      char *p;
 105  
 106  
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
109	    if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 104      char *p;
 105  
 106  
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$6 = 1025
[H[J[3J─── Output/messages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
112	    if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
─── Source ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 107      mm_clear_typecode(matcode);  
 108  
 109      if (fgets(line, MM_MAX_LINE_LENGTH, f) == NULL) 
 110          return MM_PREMATURE_EOF;
 111  
 112      if (sscanf(line, "%s %s %s %s %s", banner, mtx, crd, data_type, 
 113          storage_scheme) != 5)
 114          return MM_PREMATURE_EOF;
 115  
 116      for (p=mtx; *p!='\0'; *p=tolower(*p),p++);  /* convert to lower case */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$7 = (FILE *) 0x55555564e490
$8 = "LMM_usage_rate,LMM_usage_kbyte,LMM_usage_A_rate,LMM_usage_A_kbyte,LMM_usage_B_rate,LMM_usage_B_kbyte,sparse_rate,A_row_size,A_col_size,B_row_size,B_col_size,A_col_blk,B_col_blk,C_col_blk,NCHIP,W,ARM,D"...
Breakpoint 1 at 0x1469: file test_chipA_spmv_multi_real_data_test.c, line 41.
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x7ffff7fcfb00) at test_chipA_spmv_multi_real_data_test.c:41
41	{   
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x555555574875: file kernel/spmv_sparse_CHIP_div_A.c, line 106.
Continuing.
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, spmv_sparse_CHIP_div_A (C=0x7fffe965e340, A=0x7fffe6988010, B=0x7fffe965bd90, A_sparse=0x55555566c6d0, params=0x7fffffffe340) at kernel/spmv_sparse_CHIP_div_A.c:106
106	        fprintf(stderr,"Thie pattern does not exist spmv_sparse_CHIP_div_A.c:%d \n",__LINE__);
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 101      else if (params->col_max<10){
 102          H = 10;
 103      }
 104      else  {
 105          // printf("H %llu\n",H);
!106          fprintf(stderr,"Thie pattern does not exist spmv_sparse_CHIP_div_A.c:%d \n",__LINE__);
 107          exit(1);
 108      }
 109      for (blk=0,blk_iter=0,A_col_blk_tmp=A_col_blk,A_row_size_mul_2_mul_A_col_blk = A_row_size_pad*2*A_col_blk; blk<A_col_size; blk+=A_col_blk*H,blk_iter+=A_col_blk) { /* 3重ループ展開の外側対象 */
 110          if ((A_margin_tmp=A_margin[blk_iter])==0) {break;}
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
$1 = 58
$2 = 50
Breakpoint 1 at 0x1469: file test_chipA_spmv_size_test.c, line 41.
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x0) at test_chipA_spmv_size_test.c:41
41	{   
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Continuing.
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Program received signal SIGSEGV, Segmentation fault.
0x0000555555568144 in make_sparse_mat_3 (emax6_param=0x7fffffffe350, init_param=0x0) at util/make_sparse_mat.c:229
229	  FILE* f = init_param->fp;
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
 226    W              = emax6_param->W_param             ; 
 227    nnz            = emax6_param->nnz                 ; 
 228    matcode        = emax6_param->matcode             ;
 229    FILE* f = init_param->fp;
 230  
 231   
 232  
 233    int* col_index  = (int *) calloc(nnz,sizeof(int));
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
#0  0x0000555555568144 in make_sparse_mat_3 (emax6_param=0x7fffffffe350, init_param=0x0) at util/make_sparse_mat.c:229
#1  0x0000555555568592 in make_mat (emax6_param=0x7fffffffe350, sparsity=0, biased_percent=0, init_param=0x0) at util/make_sparse_mat.c:297
#2  0x0000555555555e23 in main (argc=2, argv=0x7fffffffe558) at test_chipA_spmv_size_test.c:192
Cannot access memory at address 0x20
Breakpoint 1 at 0x1469: file test_chipA_spmv_size_test.c, line 41.
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 1, main (argc=0, argv=0x0) at test_chipA_spmv_size_test.c:41
41	{   
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 36  #define CSIMWD 320
 37  #define CSIMHT 240
 38  #define CSIMBM (CSIMWD*CSIMHT)
 39  
 40  main(int argc,char*argv[])
!41  {   
 42  Uint *A = NULL;  /*[A_row_size][L];*/
 43  Uint *B = NULL;  /*[L][B_col_size];*/
 44  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 45  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Breakpoint 2 at 0x555555555df1: file test_chipA_spmv_size_test.c, line 192.
Continuing.
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Breakpoint 2, main (argc=2, argv=0x7fffffffe558) at test_chipA_spmv_size_test.c:192
192	        coo = make_mat(&params,sparse_rate[sparse_rate_index],zero_bias,NULL);
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 187          C_debug = (Uint*)calloc(A_row_size_pad*(B_col_size_pad),sizeof(Uint));
 188          B_debug = (Uint*)calloc((B_col_size_pad)*(B_row_size_pad),sizeof(Uint));
 189          
 190  
 191          // make A sparse matrix with sparsity percent
!192          coo = make_mat(&params,sparse_rate[sparse_rate_index],zero_bias,NULL);
 193          // coo = make_sparse_mat(params,0.1);
 194          // make B dense matrix for simd calculation
 195          make_random_mat(&params,B,B_debug);
 196  
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
make_mat (emax6_param=0x2, sparsity=4.59163468e-41, biased_percent=-nan(0x7fe130), init_param=0x7ffff7e57e22 <__libc_calloc+738>) at util/make_sparse_mat.c:282
282	coo_format* make_mat(emax6_param* emax6_param,float sparsity,float biased_percent,init_param* init_param){
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 277  
 278    return coo;
 279  }
 280  
 281  
 282  coo_format* make_mat(emax6_param* emax6_param,float sparsity,float biased_percent,init_param* init_param){
 283    coo_format* coo = NULL;
 284  
 285    switch (emax6_param->data_type)
 286    {
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
283	  coo_format* coo = NULL;
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 278    return coo;
 279  }
 280  
 281  
 282  coo_format* make_mat(emax6_param* emax6_param,float sparsity,float biased_percent,init_param* init_param){
 283    coo_format* coo = NULL;
 284  
 285    switch (emax6_param->data_type)
 286    {
 287    case DENSE_TYPE:
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
285	  switch (emax6_param->data_type)
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 280  
 281  
 282  coo_format* make_mat(emax6_param* emax6_param,float sparsity,float biased_percent,init_param* init_param){
 283    coo_format* coo = NULL;
 284  
 285    switch (emax6_param->data_type)
 286    {
 287    case DENSE_TYPE:
 288    case DENSE_SPMV_TYPE:
 289    case SPARSE_TYPE:
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
297	    coo = make_sparse_mat_3(emax6_param,init_param);
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 292      break;
 293    case BIASED_SPARSE_TYPE:
 294      coo = make_sparse_mat_2(emax6_param,sparsity,biased_percent);
 295      break;
 296    case REAL_DATA_TYPE:
 297      coo = make_sparse_mat_3(emax6_param,init_param);
 298      break;
 299    default:
 300      fprintf(stderr,"This pattern doesnt exsit in make_sparse_mat\n");
 301      break;
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
make_sparse_mat_3 (emax6_param=0xfac, init_param=0x5555555cd030) at util/make_sparse_mat.c:205
205	static coo_format* make_sparse_mat_3(emax6_param* emax6_param,init_param* init_param){
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 200  
 201    return coo;
 202  }
 203  
 204  
 205  static coo_format* make_sparse_mat_3(emax6_param* emax6_param,init_param* init_param){
 206    // sparsity 何パーセント疎か
 207  
 208    int col,row,tmp,tmp1,nnz=0;
 209    // int A_row_size = emax6_param->A_row_size_param;
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
208	  int col,row,tmp,tmp1,nnz=0;
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 203  
 204  
 205  static coo_format* make_sparse_mat_3(emax6_param* emax6_param,init_param* init_param){
 206    // sparsity 何パーセント疎か
 207  
 208    int col,row,tmp,tmp1,nnz=0;
 209    // int A_row_size = emax6_param->A_row_size_param;
 210    coo_format* coo = (coo_format*)malloc(sizeof(coo_format));
 211    Uint A_row_size, A_col_size; 
 212    Uint A_row_size_pad, A_col_size_pad; 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
210	  coo_format* coo = (coo_format*)malloc(sizeof(coo_format));
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 205  static coo_format* make_sparse_mat_3(emax6_param* emax6_param,init_param* init_param){
 206    // sparsity 何パーセント疎か
 207  
 208    int col,row,tmp,tmp1,nnz=0;
 209    // int A_row_size = emax6_param->A_row_size_param;
 210    coo_format* coo = (coo_format*)malloc(sizeof(coo_format));
 211    Uint A_row_size, A_col_size; 
 212    Uint A_row_size_pad, A_col_size_pad; 
 213    Uint B_row_size, B_col_size; 
 214    Uint B_row_size_pad, B_col_size_pad; 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
220	  A_row_size     = emax6_param->A_row_size_param    ; 
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 215    size_t W; 
 216    int i;  
 217    double val;
 218    size_t nnz_shift1,nnz_tmp;
 219    MM_typecode* matcode;
 220    A_row_size     = emax6_param->A_row_size_param    ; 
 221    A_row_size_pad = emax6_param->A_row_size_pad_param; 
 222    A_col_size     = emax6_param->A_col_size_param    ; 
 223    A_col_size_pad = emax6_param->A_col_size_pad_param; 
 224    B_row_size     = emax6_param->B_row_size_param    ; 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
221	  A_row_size_pad = emax6_param->A_row_size_pad_param; 
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 216    int i;  
 217    double val;
 218    size_t nnz_shift1,nnz_tmp;
 219    MM_typecode* matcode;
 220    A_row_size     = emax6_param->A_row_size_param    ; 
 221    A_row_size_pad = emax6_param->A_row_size_pad_param; 
 222    A_col_size     = emax6_param->A_col_size_param    ; 
 223    A_col_size_pad = emax6_param->A_col_size_pad_param; 
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
222	  A_col_size     = emax6_param->A_col_size_param    ; 
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 217    double val;
 218    size_t nnz_shift1,nnz_tmp;
 219    MM_typecode* matcode;
 220    A_row_size     = emax6_param->A_row_size_param    ; 
 221    A_row_size_pad = emax6_param->A_row_size_pad_param; 
 222    A_col_size     = emax6_param->A_col_size_param    ; 
 223    A_col_size_pad = emax6_param->A_col_size_pad_param; 
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
 226    W              = emax6_param->W_param             ; 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
223	  A_col_size_pad = emax6_param->A_col_size_pad_param; 
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 218    size_t nnz_shift1,nnz_tmp;
 219    MM_typecode* matcode;
 220    A_row_size     = emax6_param->A_row_size_param    ; 
 221    A_row_size_pad = emax6_param->A_row_size_pad_param; 
 222    A_col_size     = emax6_param->A_col_size_param    ; 
 223    A_col_size_pad = emax6_param->A_col_size_pad_param; 
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
 226    W              = emax6_param->W_param             ; 
 227    nnz            = emax6_param->nnz                 ; 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
224	  B_row_size     = emax6_param->B_row_size_param    ; 
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 219    MM_typecode* matcode;
 220    A_row_size     = emax6_param->A_row_size_param    ; 
 221    A_row_size_pad = emax6_param->A_row_size_pad_param; 
 222    A_col_size     = emax6_param->A_col_size_param    ; 
 223    A_col_size_pad = emax6_param->A_col_size_pad_param; 
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
 226    W              = emax6_param->W_param             ; 
 227    nnz            = emax6_param->nnz                 ; 
 228    matcode        = emax6_param->matcode             ;
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
225	  B_row_size_pad = emax6_param->B_row_size_pad_param; 
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 220    A_row_size     = emax6_param->A_row_size_param    ; 
 221    A_row_size_pad = emax6_param->A_row_size_pad_param; 
 222    A_col_size     = emax6_param->A_col_size_param    ; 
 223    A_col_size_pad = emax6_param->A_col_size_pad_param; 
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
 226    W              = emax6_param->W_param             ; 
 227    nnz            = emax6_param->nnz                 ; 
 228    matcode        = emax6_param->matcode             ;
 229    FILE* f = init_param->fp;
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
226	  W              = emax6_param->W_param             ; 
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 221    A_row_size_pad = emax6_param->A_row_size_pad_param; 
 222    A_col_size     = emax6_param->A_col_size_param    ; 
 223    A_col_size_pad = emax6_param->A_col_size_pad_param; 
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
 226    W              = emax6_param->W_param             ; 
 227    nnz            = emax6_param->nnz                 ; 
 228    matcode        = emax6_param->matcode             ;
 229    FILE* f = init_param->fp;
 230  
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
227	  nnz            = emax6_param->nnz                 ; 
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 222    A_col_size     = emax6_param->A_col_size_param    ; 
 223    A_col_size_pad = emax6_param->A_col_size_pad_param; 
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
 226    W              = emax6_param->W_param             ; 
 227    nnz            = emax6_param->nnz                 ; 
 228    matcode        = emax6_param->matcode             ;
 229    FILE* f = init_param->fp;
 230  
 231   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
228	  matcode        = emax6_param->matcode             ;
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 223    A_col_size_pad = emax6_param->A_col_size_pad_param; 
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
 226    W              = emax6_param->W_param             ; 
 227    nnz            = emax6_param->nnz                 ; 
 228    matcode        = emax6_param->matcode             ;
 229    FILE* f = init_param->fp;
 230  
 231   
 232  
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
229	  FILE* f = init_param->fp;
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
 226    W              = emax6_param->W_param             ; 
 227    nnz            = emax6_param->nnz                 ; 
 228    matcode        = emax6_param->matcode             ;
 229    FILE* f = init_param->fp;
 230  
 231   
 232  
 233    int* col_index  = (int *) calloc(nnz,sizeof(int));
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[H[J[3J─── Output/messages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Program received signal SIGSEGV, Segmentation fault.
0x0000555555568144 in make_sparse_mat_3 (emax6_param=0x7fffffffe350, init_param=0x0) at util/make_sparse_mat.c:229
229	  FILE* f = init_param->fp;
─── Source ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 224    B_row_size     = emax6_param->B_row_size_param    ; 
 225    B_row_size_pad = emax6_param->B_row_size_pad_param; 
 226    W              = emax6_param->W_param             ; 
 227    nnz            = emax6_param->nnz                 ; 
 228    matcode        = emax6_param->matcode             ;
 229    FILE* f = init_param->fp;
 230  
 231   
 232  
 233    int* col_index  = (int *) calloc(nnz,sizeof(int));
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
No symbol table is loaded.  Use the "file" command.
Make breakpoint pending on future shared library load? (y or [n]) [answered N; input not from terminal]
gdbinit:71: Error in sourced command file:
No executable file specified.
Use the "file" or "exec-file" command.
No symbol table is loaded.  Use the "file" command.
Make breakpoint pending on future shared library load? (y or [n]) [answered N; input not from terminal]
gdbinit:71: Error in sourced command file:
No executable file specified.
Use the "file" or "exec-file" command.
No symbol table is loaded.  Use the "file" command.
Make breakpoint pending on future shared library load? (y or [n]) [answered N; input not from terminal]
gdbinit:71: Error in sourced command file:
No executable file specified.
Use the "file" or "exec-file" command.
Breakpoint 1 at 0x1880: file test_chipB_div_size_test.c, line 42.
[H[J[3J[36m───[0m [1;33mOutput/messages[0m [36m──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────[0m
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/aarch64-linux-gnu/libthread_db.so.1".
[36m───[0m [1;33mSource[0m [36m───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────[0m
 [90m37[0m  #define CSIMHT 240
 [90m38[0m  #define CSIMBM (CSIMWD*CSIMHT)
 [90m39[0m  
 [90m40[0m  main(int argc,char*argv[])
 [90m41[0m  {   
[0;41m![0m[1;32m42  Uint *A = NULL;  /*[A_row_size][L];*/[0m
 [90m43[0m  Uint *B = NULL;  /*[L][B_col_size];*/
 [90m44[0m  Uint *C0 = NULL; /*[A_row_size][B_col_size];*/
 [90m45[0m  Uint *C1 = NULL; /*[A_row_size][B_col_size];*/
 [90m46[0m  Uint *Base_p = NULL;
[36m──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────[0m

Breakpoint 1, main (argc=2, argv=0x7ffffff878) at test_chipB_div_size_test.c:42
42	Uint *A = NULL;  /*[A_row_size][L];*/
Continuing.
[H[J[3J[36m───[0m [1;33mOutput/messages[0m [36m──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────[0m

Program received signal SIGSEGV, Segmentation fault.
[36m───[0m [1;33mSource[0m [36m───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────[0m
[31mCannot display "memcpy.S"[0m
[36m──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────[0m
memcpy () at ../sysdeps/aarch64/memcpy.S:189
189	../sysdeps/aarch64/memcpy.S: No such file or directory.
#0  memcpy () at ../sysdeps/aarch64/memcpy.S:189
#1  0x0000005555575138 in sparse_format (nnz=905510, val=0x7e37baf000, val_tmp=0x7e36496010, col_index=0x7e36c44010, row_index=0x7e3686d010, row_size=1003, col_size=1003, emax6_param=0x7ffffff4e0, sort_index=0x7e38b12848, file_name=0x55555f3180 "/home/takuya-s/IMAX_sparse.cent/sample/test/sparse_data.wb", read_or_write=0) at util/sparse_format.c:28
#2  0x00000055555570a8 in main (argc=2, argv=0x7ffffff878) at test_chipB_div_size_test.c:218
