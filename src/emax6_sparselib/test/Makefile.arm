PROJTOP	      = ../../
OPTION        = -mstrict-align  -DCYCLECNT -DARMZYNQ -DEMAX6 -DFPDDMA
PROGRAM       = test_chipA_div+dma test_chipB_div+dma test_normal_mode+dma
CPP           = cpp -P
CC            = gcc
#CFLAGS        = -I. -O3 -g3 $(OPTION)
CFLAGS        = 
AS            = as
ASFLAGS       = 
LD            = gcc
LDFLAGS       =  -L../
LIBS          = -lm -lc -lX11 -lXext -lsparse
LIBFLAGS      = 
OBJS	      =	test_chipB_div-emax6.o test_chipA_div-emax6.o test_normal_mode.o 
INCLUDE = -I../Include
all:		$(PROGRAM)
SHARED_LINK = 0
SHARED_PATH =
LINK_FORMAT = static

test_normal_mode+dma:     test_normal_mode.o
		$(CC) $(INCLUDE)  $(LDFLAGS) -o $@ $< $(LIBFLAGS) $(LIBS)

test_normal_mode.o:	test_normal_mode.c 
		$(CC) $(INCLUDE)  $(CFLAGS) -c $<

test_chipA_div+dma:     test_chipA_div.o
		$(CC) $(INCLUDE)  $(LDFLAGS) -o $@ $< $(LIBFLAGS) $(LIBS)

test_chipA_div.o:	test_chipA_div.c 
		$(CC) $(INCLUDE)  $(CFLAGS) -c $<


test_chipB_div+dma:     test_chipB_div.o
		$(CC) $(INCLUDE)  $(LDFLAGS) -o $@ $< $(LIBFLAGS) $(LIBS)

test_chipB_div.o:	test_chipB_div.c 
		$(CC) $(INCLUDE)  $(CFLAGS) -c $<


ifeq ($(LINK_FORMAT),static)
test_normal_mode.o: $(PROJTOP)/conv-c2c/emax6.h $(PROJTOP)/conv-c2c/emax6lib.c ../Include/emax6_sparselib.h ../libsparse.a
test_chipA_div.o: $(PROJTOP)/conv-c2c/emax6.h $(PROJTOP)/conv-c2c/emax6lib.c ../Include/emax6_sparselib.h ../libsparse.a
test_chipB_div.o: $(PROJTOP)/conv-c2c/emax6.h $(PROJTOP)/conv-c2c/emax6lib.c ../Include/emax6_sparselib.h ../libsparse.a
endif

ifeq ($(LINK_FORMAT),shared)
test_normal_mode.o: $(PROJTOP)/conv-c2c/emax6.h $(PROJTOP)/conv-c2c/emax6lib.c ../Include/emax6_sparselib.h ../libsparse.so
test_chipA_div.o: $(PROJTOP)/conv-c2c/emax6.h $(PROJTOP)/conv-c2c/emax6lib.c ../Include/emax6_sparselib.h ../libsparse.so
test_chipB_div.o: $(PROJTOP)/conv-c2c/emax6.h $(PROJTOP)/conv-c2c/emax6lib.c ../Include/emax6_sparselib.h ../libsparse.so
endif

# $(MAKE)はマクロも引き継がれる


clean:		
		rm -f *.o core *~ *-mark.c *-cppo.c *-emax6.c 

