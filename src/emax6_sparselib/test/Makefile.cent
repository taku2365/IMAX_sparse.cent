
## EMAX5/6 Application Simulator       ##
##   Copyright (C) 2014 by NAIST UNIV. ##
##         Primary writer: Y.Nakashima ##
##                nakashim@is.naist.jp ##

## -DEMAX5     ... with emaxnc/emax
## -DEMAX6     ... with emaxnc/emax
## -DARMSIML   ... with bsim/csim
## -DARMZYNQ   ... with ZYNQ

## Makefile              native        : none
## Makefile.emax5nc      native+EMAX5NC: -DEMAX5
## Makefile.emax6nc      native+EMAX6NC: -DEMAX6

## Makefile-bsim         bsim          : -DARMSIML
## Makefile-bsim.emax5nc bsim+EMAX5NC  : -DARMSIML -DEMAX5
## Makefile-bsim.emax5   bsim+EMAX5    : -DARMSIML -DEMAX5 emax5_start->emax_start->syscall
## Makefile-zynq.emax5nc(ZYNQ+EMAX5NC  : -DARMZYNQ -DEMAX5)
## Makefile-zynq.emax5  (ZYNQ+EMAX5HW  : -DARMZYNQ -DEMAX5) emax5_start->udev_write

## Makefile-csim         csim          : -DARMSIML
## Makefile-csim.emax6nc csim+EMAX6NC  : -DARMSIML -DEMAX6
## Makefile-csim.emax6   csim+EMAX6    : -DARMSIML -DEMAX6 emax6_start->emax_start->syscall
## Makefile-zynq.emax6nc(ZYNQ+EMAX6NC  : -DARMZYNQ -DEMAX6)
## Makefile-zynq.emax6  (ZYNQ+EMAX6HW  : -DARMZYNQ -DEMAX6) emax6_start->udev_write

export CPP     = cpp -P
export CC      = gcc
#CFLAGS  = -g3 -O0 -Wall  -msse3 -Wno-unknown-pragmas -funroll-loops -I/usr/local/include -I/usr/include/openblas -DCBLAS_GEMM -DEMAX6 -DDEBUG
CFLAGS  = 
export LDFLAGS = -L/usr/lib64 -L/usr/local/lib -L/usr/lib64/atlas -lm -lrt -lopenblas -lX11 -lXext
SUFFIX = .c
EMAX6_SPARSE_TEST = $(wildcard test_*$(SUFFIX)) 
EMAX6_SPARSE_TEST_BIN = $(patsubst %.c,%,$(EMAX6_SPARSE_TEST))
SRCS          =	($(OBJS:.o=.c))
#HEADERS       =	../../src/emax6_sparselib/include/emax6_sparselib.h
INCLUDE = -I../Include
SHARED_LINK = static
SHARED_PATH =



ifeq ($(SHARED_LINK),shared)
	SHARED_PATH=..
	
	EMAX_SPARSE_LIB = -L.. -lsparse
else
	EMAX_SPARSE_LIB = ../libsparse.a
endif


all: $(EMAX6_SPARSE_TEST_BIN) 


test_%:	test_%.o libsparse
		$(CC)  $< -o $(basename $<)  $(EMAX_SPARSE_LIB) $(LDFLAGS) $(CFLAGS)

test_%.o: test_%.c $(HEADERS)
		$(CC) $(CFLAGS)  -c $< ${INCLUDE} -o $(basename $<).o


ifeq ($(SHARED_LINK),shared)
libsparse:	../libsparse.so 
else
libsparse:	../libsparse.a
endif

clean:  		
	rm -rf *.o *~ $(basename $(PROGRAM))















